{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/carrot-foundation/schemas/refs/heads/main/schemas/ipfs/shared/base/base.schema.json",
  "title": "Carrot Base IPFS Record",
  "description": "Base fields for all Carrot IPFS records, providing common structure for any JSON content stored in IPFS.",
  "type": "object",
  "required": [
    "$schema",
    "schema",
    "created_at",
    "external_id",
    "external_url",
    "content_hash",
    "creator"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "format": "uri",
      "title": "Schema URI",
      "description": "URI of the JSON Schema used to validate this record.",
      "example": "https://raw.githubusercontent.com/carrot-foundation/schemas/refs/heads/main/schemas/ipfs/mass-id/mass-id.schema.json"
    },
    "schema": {
      "type": "object",
      "description": "Schema information.",
      "required": ["hash", "type", "version"],
      "properties": {
        "hash": {
          "$ref": "../definitions/definitions.schema.json#/$defs/keccak256_hash",
          "title": "Schema Hash",
          "description": "Keccak256 hash of the JSON Schema this record was validated against (32 bytes as hex string)."
        },
        "type": {
          "type": "string",
          "enum": [
            "MassID",
            "MassID Audit",
            "RecycledID",
            "GasID",
            "PurchaseID",
            "Methodology",
            "Credit",
            "Collection"
          ],
          "title": "Schema Type",
          "description": "Type/category of this schema.",
          "example": "MassID"
        },
        "version": {
          "$ref": "../definitions/definitions.schema.json#/$defs/semantic_version",
          "title": "Schema Version",
          "description": "Version of the schema, using semantic versioning (https://semver.org/)."
        }
      },
      "additionalProperties": false
    },
    "created_at": {
      "$ref": "../definitions/definitions.schema.json#/$defs/iso_timestamp",
      "title": "Record Creation Timestamp",
      "description": "ISO 8601 creation timestamp for this record."
    },
    "external_id": {
      "$ref": "../definitions/definitions.schema.json#/$defs/external_id"
    },
    "external_url": {
      "$ref": "../definitions/definitions.schema.json#/$defs/external_url"
    },
    "content_hash": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{64}$",
      "title": "Content Hash",
      "description": "SHA-256 hash of RFC 8785 canonicalized JSON after schema validation."
    },
    "creator": {
      "type": "object",
      "description": "Entity that created this record.",
      "required": ["type", "value", "jurisdiction"],
      "properties": {
        "type": {
          "type": "string",
          "const": "company_registration",
          "description": "Type of identifier used for the creator entity."
        },
        "value": {
          "type": "string",
          "description": "Company registration number or identifier value."
        },
        "jurisdiction": {
          "type": "string",
          "pattern": "^[A-Z]{2}(-[A-Z]{2})?$",
          "description": "Jurisdiction code (ISO 3166-1 alpha-2, optionally with subdivision).",
          "example": "US-DE"
        }
      },
      "additionalProperties": false
    },
    "relationships": {
      "type": "array",
      "description": "References to other IPFS records this record relates to.",
      "items": {
        "type": "object",
        "required": ["target_cid", "type"],
        "properties": {
          "target_cid": {
            "type": "string",
            "pattern": "^(Qm[1-9A-HJ-NP-Za-km-z]{44}|b[a-z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]+)$",
            "description": "IPFS Content Identifier (CID) of the referenced record."
          },
          "type": {
            "type": "string",
            "enum": [
              "source_data",
              "methodology",
              "audit",
              "update",
              "derivation",
              "reference"
            ],
            "description": "Type of relationship to the referenced record."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the relationship."
          }
        },
        "additionalProperties": false
      }
    },
    "signature": {
      "type": "object",
      "description": "Cryptographic signature for record authenticity (optional).",
      "required": ["algorithm", "value", "signer_address"],
      "properties": {
        "algorithm": {
          "type": "string",
          "const": "ECDSA-secp256k1",
          "description": "Cryptographic signature algorithm used."
        },
        "value": {
          "type": "string",
          "pattern": "^0x[a-fA-F0-9]{130}$",
          "description": "Hex signature (65 bytes) of the record's content hash."
        },
        "signer_address": {
          "type": "string",
          "pattern": "^0x[a-fA-F0-9]{40}$",
          "description": "Ethereum address of the signing entity."
        }
      },
      "additionalProperties": false
    },
    "environment": {
      "type": "object",
      "description": "Environment information.",
      "required": ["blockchain_network", "deployment", "data_set_name"],
      "properties": {
        "blockchain_network": {
          "type": "string",
          "enum": ["mainnet", "testnet"],
          "title": "Blockchain Network Environment",
          "example": "mainnet"
        },
        "deployment": {
          "type": "string",
          "enum": ["production", "development", "testing"],
          "title": "Deployment Environment",
          "description": "System environment where this record was generated.",
          "example": "production"
        },
        "data_set_name": {
          "type": "string",
          "enum": ["TEST", "PROD"],
          "title": "Data Set Name",
          "description": "Name of the data set for this record.",
          "example": "TEST"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}
